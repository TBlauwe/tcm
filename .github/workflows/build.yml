name: build.yml

on:
  workflow_call:
    inputs:
      os:
        description: 'Operating system'
        required: true
        type: string
        default: 'ubuntu-latest'
      architecture:
        description: 'System architecture'
        required: true
        type: string
        default: 'x64'
      configuration:
        description: 'Build configuration'
        required: true
        type: string
        default: 'release'
      toolchain:
        description: 'Compiler toolchain'
        required: true
        type: string
    outputs:
      build_directory:
        value: './out/build/${{inputs.architecture}}-${{inputs.toolchain}}-${{inputs.configuration}}'

jobs:
  build:
    env:
      preset_name: '${{inputs.architecture}}-${{inputs.toolchain}}-${{inputs.configuration}}'
      build_directory: './out/build/${{inputs.architecture}}-${{inputs.toolchain}}-${{inputs.configuration}}'
      CPM_SOURCE_CACHE: './.cpm_cache'

    steps:
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ env.preset_name }}

      - name: "Cache CPM dependencies"
        uses: actions/cache@v4
        with:
          path: ${{ env.CPM_SOURCE_CACHE }}
          key: cpm-${{ hashFiles('**/*.cmake', '**/CMakeLists.txt') }}
          enableCrossOsArchive: true

      - name: "Install msvc"
        if: ${{matrix.toolchain}} == msvc
        uses: ilammy/msvc-dev-cmd@v1

      - name: "Install CMake and Ninja"
        uses: lukka/get-cmake@latest

      - name: Build
        run: |
          cmake --preset ${{ env.preset_name }}
          cmake --build ${{ env.build_directory }}
