name: 'Build'
description: 'Composite action to build this cmake project'
inputs:
  os:
    description: 'Operating system'
    required: true
    type: string
    default: 'ubuntu-latest'
  architecture:
    description: 'System architecture'
    required: true
    type: string
    default: 'x64'
  configuration:
    description: 'Build configuration'
    required: true
    type: string
    default: 'release'
  toolchain:
    description: 'Compiler toolchain'
    required: true
    type: string
outputs:
  build_directory:
    value: ${{steps.vars.outputs.build_directory}}
  preset_name:
    value: ${{steps.vars.outputs.preset_name}}

runs:
  using: "composite"
  steps:
    - name: "Set variables"
      id: vars
      shell: bash
      run: |
          echo "preset_name=$inputs.architecture-$inputs.toolchain-$inputs.configuration" >> "${GITHUB_OUTPUT}"
          echo "build_directory=./out/build/$inputs.architecture-$inputs.toolchain-$inputs.configuration" >> "${GITHUB_OUTPUT}"

    - name: "CCache"
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ steps.vars.outputs.preset_name }}

    - name: "Cache CPM dependencies"
      uses: actions/cache@v4
      with:
        path: ${{ env.CPM_SOURCE_CACHE }}
        key: cpm-${{ hashFiles('**/*.cmake', '**/CMakeLists.txt') }}
        enableCrossOsArchive: true

    - name: "Install msvc"
      if: ${{inputs.toolchain == 'msvc'}}
      uses: ilammy/msvc-dev-cmd@v1

    - name: "Install CMake and Ninja"
      uses: lukka/get-cmake@latest

    - name: "Build"
      shell: bash
      run: |
        cmake --preset ${{ steps.vars.outputs.preset_name }}
        cmake --build ${{ steps.vars.outputs.build_directory }}
